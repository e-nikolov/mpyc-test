{"version":3,"file":"index-fSI06pKA.js","sources":["../../test/clipboard2/main.ts"],"sourcesContent":["import qr from 'qrcode';\nimport { $ } from '../../src/ts/utils';\nconsole.log(qr)\nconst DEFAULT_URL = \"https://e-nikolov.github.io/mpyc-test/?peer=c814d8ce-f1a9-4767-ae18-fec8fc386180\"\n\nlet imageBlob: Blob;\nlet canvas = $<HTMLCanvasElement>(\"#canvas\")!;\nlet image = $<HTMLImageElement>(\"#image\")!;\nlet image2 = $<HTMLImageElement>(\"#image2\")!;\nlet copyBtn = $<HTMLButtonElement>('#copy');\nlet target = $<HTMLDivElement>('#target');\n\nconst getBlob = async (text: string) => {\n  let code = qr.toDataURL(text, { errorCorrectionLevel: \"H\" })\n\n  return await code\n\n}\n\nconst makeQRCode = async (text: string) => {\n  image.src = await qr.toDataURL(canvas, text, { errorCorrectionLevel: \"H\" });\n}\n\nconst copyQRCode = async () => {\n\n  // do copy\n  SelectText(target);\n}\ninterface ClipboardItem {\n  /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/ClipboardItem/types) */\n  readonly types: ReadonlyArray<string>;\n  /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/ClipboardItem/getType) */\n  getType(type: string): Promise<Blob>;\n}\n\ninterface ClipboardItemOptions {\n  presentationStyle?: PresentationStyle;\n}\n\ntype PresentationStyle = \"attachment\" | \"inline\" | \"unspecified\";\ndeclare var ClipboardItem: {\n  prototype: ClipboardItem;\n  new(items: Record<string, string | Blob | PromiseLike<string | Blob>>, options?: ClipboardItemOptions): ClipboardItem;\n};\n\nawait makeQRCode(DEFAULT_URL)\n\nfunction SelectText(element) {\n  if (document.body.createTextRange) {\n    var range = document.body.createTextRange();\n    range.moveToElementText(element);\n    range.select();\n  } else if (window.getSelection) {\n    var selection = window.getSelection()!;\n    var range = document.createRange();\n    range.selectNodeContents(element);\n    selection.removeAllRanges();\n    selection.addRange(range);\n  }\n}\n// qr.toDataURL(canvas, \"google.com\", { errorCorrectionLevel: \"H\" })\n//   .then(dataURL => {\n//     console.log(\"dataURL\", dataURL)\n//     canvas.toBlob((blob) => {\n//       console.log(\"blob\", blob)\n//       // let blobURL = URL.createObjectURL(blob!)\n//       let blobURL = canvas.toDataURL()\n//       imageBlob = blob!;\n//       console.log(\"blobURL\", blobURL)\n//       image.src = blobURL;\n//     })\n//   })\n//   .catch(err => {\n//     console.error(err)\n//   })\nconst blob = await new Promise<Blob>((resolve) => canvas.toBlob((blob: Blob | null) => resolve(blob!)));\nconsole.log(\"blob\", blob)\ncopyBtn.addEventListener('click', () => {\n  // document.execCommand(\"copy\", true, \"123\")\n  console.log(\"copy button clicked\")\n  document.execCommand('Copy');\n  // copyQRCode()\n});\nwindow.addEventListener('copy', function (e: ClipboardEvent) {\n  console.log(\"intercepting copy--------------------------\", e.clipboardData)\n\n  let f = new File([blob], \"qr.png\", { type: \"image/png\" })\n  // e.clipboardData!.items.add(\"<b style='color: purple; font-size: 50px;'>asdf</b>\", \"text/html\");\n  e.clipboardData!.items.add(f);\n  // e.clipboardData!.files = new FileList()\n\n  console.log(\"text/plain\", e.clipboardData!.getData(\"text/plain\"))\n  console.log(\"text/html\", e.clipboardData!.getData(\"text/html\"))\n  console.log(\"image/png\", e.clipboardData!.getData(\"image/png\"))\n  console.log(\"f1\", f)\n  console.log(\"size 1\", f.size)\n  console.log(\"files\", e.clipboardData!.files)\n  console.log(\"items\", e.clipboardData!.items)\n  console.log(\"kind\", e.clipboardData!.items[0].kind)\n  console.log(\"type\", e.clipboardData!.items[0].type)\n  // console.log(e.clipboardData!.setData(\"text/html\", \"<b style='color: purple; font-size: 50px;'>asdf</b>\"))\n  console.log(e.clipboardData!.setData)\n  // navigator.clipboard.write([new ClipboardItem({ \"image/png\": blob })])\n  // console.log(e.clipboardData!.setData(\"image/png\", image.src))\n  e.preventDefault();\n})\n\n// target.setAttribute(\"contenteditable\", \"\");\ndocument.addEventListener(\"paste\", function (e) {\n  console.log(\"intercepting paste--------------------------\", e.clipboardData)\n\n  console.log(\"image/png\", e.clipboardData!.getData(\"image/png\"))\n  console.log(\"text/plain\", e.clipboardData!.getData(\"text/plain\"))\n  console.log(\"text/html\", e.clipboardData!.getData(\"text/html\"))\n  console.log(\"items[0]\", e.clipboardData!.items[0])\n  console.log(\"type\", e.clipboardData!.items[0].type)\n  console.log(\"kind\", e.clipboardData!.items[0].kind)\n  let f = e.clipboardData!.items[0].getAsFile()!\n\n  console.log(\"f2\", f)\n  console.log(\"size 2\", f.size)\n  // console.log(\"paste\", e.clipboardData?.items[0].getAsFile())\n  // console.log(\"paste\", await e.clipboardData?.items[0].getAsFile()?.arrayBuffer())\n  console.log(\"paste\", e.clipboardData)\n})\n\n// window.addEventListener('copy', async function (e: ClipboardEvent) {\n//   // e.clipboardData!.setData('text/plain', 'asdf');\n//   // e.clipboardData!.clearData('text/plain');\n//   // e.clipboardData!.clearData();\n//   // e.clipboardData!.items.clear()\n//   // ev.clipboardData!.setData('text/plain', 'Hello, world!');\n//   // e.clipboardData!.setData('image/png', canvas.toDataURL().);\n\n//   e.clipboardData!.setData('text/plain', 'Hi, world!');\n//   console.log(qr)\n//   canvas.toBlob\n\n//   let b = await getBlob(\"google.com\")\n//   // e.clipboardData!.setData('text/html', '<b style=\"color: red;\">Hello, world!</b>');\n\n//   let f = new File([imageBlob], \"image.png\", { type: \"image/png\" })\n//   e.clipboardData!.items.add(f);\n//   e.clipboardData!.clearData('text/plain');\n//   console.log(\"intercepting copy--------------------------\", e.clipboardData)\n//   console.log(\"paste\", e.clipboardData?.getData(\"image/png\"))\n//   console.log(\"paste\", e.clipboardData?.getData(\"text/plain\"))\n//   console.log(\"paste\", e.clipboardData?.getData(\"text/html\"))\n//   console.log(\"paste\", e.clipboardData?.items[0])\n//   console.log(\"paste\", e.clipboardData?.items[0].kind)\n//   console.log(\"paste\", e.clipboardData?.items[0].type)\n//   // console.log(\"paste\", e.clipboardData?.items[0].getAsFile())\n//   // console.log(\"paste\", await e.clipboardData?.items[0].getAsFile()?.arrayBuffer())\n//   console.log(\"paste\", e.clipboardData)\n//   // console.log(\"copy\", e.clipboardData?.items[0].getAsFile())\n//   // ev.clipboardData!.setData('text/html', '<b style=\"color: red;\">Hello, world!</b>');\n//   e.preventDefault();\n// });\n\n\ndeclare global {\n  interface Window {\n    dragstart_handler: any;\n    dragover_handler: any;\n    drop_handler: any;\n  }\n}\n"],"names":["console","log","qr","canvas","$","image","copyBtn","async","text","src","toDataURL","errorCorrectionLevel","makeQRCode","blob","Promise","resolve","toBlob","addEventListener","document","execCommand","window","e","clipboardData","f","File","type","items","add","getData","size","files","kind","setData","preventDefault","getAsFile"],"mappings":"8HAEAA,QAAQC,IAAIC,GAIZ,IAAIC,EAASC,EAAqB,WAC9BC,EAAQD,EAAoB,UACnBA,EAAoB,WACjC,IAAIE,EAAUF,EAAqB,SACtBA,EAAkB,gBASZG,OAAOC,IAClBH,EAAAI,UAAYP,EAAGQ,UAAUP,EAAQK,EAAM,CAAEG,qBAAsB,KAAK,EAyBtEC,CA1Cc,oFAwEpB,MAAMC,QAAa,IAAIC,SAAeC,GAAYZ,EAAOa,QAAQH,GAAsBE,EAAQF,OAC/Fb,QAAQC,IAAI,OAAQY,GACpBP,EAAQW,iBAAiB,SAAS,KAEhCjB,QAAQC,IAAI,uBACZiB,SAASC,YAAY,OAAM,IAG7BC,OAAOH,iBAAiB,QAAQ,SAAUI,GAChCrB,QAAAC,IAAI,8CAA+CoB,EAAEC,eAEzD,IAAAC,EAAI,IAAIC,KAAK,CAACX,GAAO,SAAU,CAAEY,KAAM,cAEzCJ,EAAAC,cAAeI,MAAMC,IAAIJ,GAG3BvB,QAAQC,IAAI,aAAcoB,EAAEC,cAAeM,QAAQ,eACnD5B,QAAQC,IAAI,YAAaoB,EAAEC,cAAeM,QAAQ,cAClD5B,QAAQC,IAAI,YAAaoB,EAAEC,cAAeM,QAAQ,cAC1C5B,QAAAC,IAAI,KAAMsB,GACVvB,QAAAC,IAAI,SAAUsB,EAAEM,MACxB7B,QAAQC,IAAI,QAASoB,EAAEC,cAAeQ,OACtC9B,QAAQC,IAAI,QAASoB,EAAEC,cAAeI,OACtC1B,QAAQC,IAAI,OAAQoB,EAAEC,cAAeI,MAAM,GAAGK,MAC9C/B,QAAQC,IAAI,OAAQoB,EAAEC,cAAeI,MAAM,GAAGD,MAEtCzB,QAAAC,IAAIoB,EAAEC,cAAeU,SAG7BX,EAAEY,gBACJ,IAGAf,SAASD,iBAAiB,SAAS,SAAUI,GACnCrB,QAAAC,IAAI,+CAAgDoB,EAAEC,eAE9DtB,QAAQC,IAAI,YAAaoB,EAAEC,cAAeM,QAAQ,cAClD5B,QAAQC,IAAI,aAAcoB,EAAEC,cAAeM,QAAQ,eACnD5B,QAAQC,IAAI,YAAaoB,EAAEC,cAAeM,QAAQ,cAClD5B,QAAQC,IAAI,WAAYoB,EAAEC,cAAeI,MAAM,IAC/C1B,QAAQC,IAAI,OAAQoB,EAAEC,cAAeI,MAAM,GAAGD,MAC9CzB,QAAQC,IAAI,OAAQoB,EAAEC,cAAeI,MAAM,GAAGK,MAC9C,IAAIR,EAAIF,EAAEC,cAAeI,MAAM,GAAGQ,YAE1BlC,QAAAC,IAAI,KAAMsB,GACVvB,QAAAC,IAAI,SAAUsB,EAAEM,MAGhB7B,QAAAC,IAAI,QAASoB,EAAEC,cACzB"}