import{b as u}from"./purify.es-PBAgqAjd.js";const m=(o="#out",e=["Data"])=>{const i=document.querySelector(o);let t=i.querySelector("table");if(t)return t;const r=document.createElement("table"),n=r.createTHead().insertRow();n.style.borderBottom="1px solid #ccc";for(let s of e)n.insertCell().textContent=s;return i.insertAdjacentElement("beforeend",r),r};class a{static async run2(e={},i){const t=i?Object.getPrototypeOf(i):this.prototype;for(const r of Object.getOwnPropertyNames(t))r!="constructor"&&(await l(t[r].bind(i||t),{...e,name:`${e.name||t.constructor.name} - ${r}`}),await u(0))}async run(e={}){await a.run2(e,this)}}const l=async(o,e={})=>{e={...c,...e};let i=new d(o,e);return await i.run(),e.logEnabled&&i.logTable(e.logSelector),i},c={name:"",setupFn:()=>{},logEnabled:!0,logSelector:"#out",runtimeGoalMS:500,this:void 0};class d{constructor(e,i={}){this._N=0,this._I=0,this._duration=0,this.benchFunc=()=>{},this.startTime=0,this.timerOn=!1,this.run=async()=>{await this.runN(1);for(let t=1;this._duration<=this.opts.runtimeGoalMS&&t<1e9;){let r=t,n=this._N,s=this._duration;s<=0&&(s=1),t=Math.floor(this.opts.runtimeGoalMS*n/s),t+=Math.floor(t/5),t=Math.min(t,100*r),t=Math.max(t,r+1),t=Math.min(t,1e9),await this.runN(t)}},this.runN=async t=>{for(this._N=t,this._I=0;this._I<t;this._I++)this.opts.setupFn(this);for(this.ResetTimer(),this.StartTimer(),this._I=0;this._I<t;this._I++)await this.benchFunc(this);this.StopTimer()},this.opts={...c,...i},this.benchFunc=e}get N(){return this._N}get I(){return this._I}get duration(){return this._duration}get name(){return this.opts.name}get result(){return{name:this.name,N:this.N.toLocaleString,duration:this.duration.toLocaleString}}StartTimer(){this.timerOn||(this.startTime=performance.now(),this.timerOn=!0)}StopTimer(){this.timerOn&&(this._duration+=performance.now()-this.startTime,this.timerOn=!1)}ResetTimer(){this.timerOn&&(this.startTime=performance.now()),this._duration=0}toString(){return`${this.name}		${Math.round(1e3*this.N/(this.duration+1)).toLocaleString()} ops/sec`}toStrings(){return[this.name,`${Math.round(1e3*this.N/(this.duration+1)).toLocaleString()} ops/sec`]}logTable(e="#out"){((i="#out",t=["Data"])=>(...r)=>{const n=m(i,t).insertRow();for(let s of r){const h=n.insertCell();h.textContent=s,h.style.paddingRight="50px"}})(e,["Name","Ops/sec"])(...this.toStrings())}}export{a as B};
